name: CI/CD Pipeline with Build, Test, Static & Dynamic Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - name: Install Dependencies
        run: npm ci

  test:
    name: Run Unit Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: npm test -- --coverage > sonar_result.txt

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: sonar_result.txt

  static-analysis:
    name: Static Analysis with SonarQube
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=MetiGM:web-app
            -Dsonar.organization=metigm
            -Dsonar.python.coverage.reportPaths=sonar_result.txt 
            -Dsonar.qualitygate.wait=${{ github.ref == 'refs/heads/main' }}
            -Dsonar.branch.name=${{ github.ref_name }}
            ${{ github.ref != 'refs/heads/main' && '-Dsonar.branch.target=main' || '' }}

      - name: Save SonarQube Report
        run: |
          mkdir -p sonar-reports
          cp -r .scannerwork/* sonar-reports/

      - name: Upload SonarQube Report
        uses: actions/upload-artifact@v4
        with:
          name: sonar-reports
          path: sonar-reports/

  dynamic-analysis:
    name: Dynamic Analysis with OWASP ZAP
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Start Application
        run: |
          npm start &
          sleep 15  # Ensure app is fully ready

      - name: OWASP ZAP Scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: 'http://localhost:3000'
          cmd_options: '-r'

      - name: Save ZAP Reports
        run: mkdir -p zap-reports && cp /zap/wrk/* zap-reports/

      - name: Upload ZAP Reports
        uses: actions/upload-artifact@v4
        with:
          name: zap-reports
          path: zap-reports/
